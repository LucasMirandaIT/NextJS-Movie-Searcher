import { NextPage } from "next";
import Head from 'next/head';
import MoviesCarouselItem from "../components/MoviesCarousel/MoviesCarousel";

import { getLatestMovies, getPopularMovies, getTopRatedMovies } from "../api/movie-db";
import { useEffect, useState } from "react";

import useTranslation from 'next-translate/useTranslation'
import router, { useRouter } from "next/router";
import { Movie } from "../interfaces/movie";

import styles from '../styles/Recommendations.module.css';
import { Grid, Link } from "@mui/material";
import MovieItem from "../components/MovieItem/MovieItem";
import HomeIcon from '@mui/icons-material/Home';


const Recommendations: NextPage = () => {

    const { t } = useTranslation('home');
    const { t: tr } = useTranslation('recommendations');
    const { locale } = useRouter();

    const [movies, setMovies] = useState<Movie[]>([]);
    const [selectedRecommendation, setSelectedRecommendation] = useState<string>('popular');

    const recommendationsOptions = [
        { label: tr('popular'), value: 'popular' },
        { label: tr('latest'), value: 'latest' },
        { label: tr('topRated'), value: 'topRated' }
    ];

    useEffect(() => {
        getPopular();
    }, []);

    const getPopular = () => {
        getPopularMovies(locale ?? 'en').then((res) => {
            setMovies(res.results);
        });
    };
    const getLatest = () => {
        getLatestMovies(locale ?? 'en').then((res) => {
            setMovies(res.results);
        });
    };
    const getTopRated = () => {
        getTopRatedMovies(locale ?? 'en').then((res) => {
            setMovies(res.results);
        });
    };

    const handleClickOption = (option: string) => {
        setSelectedRecommendation(option);
        switch (option) {
            case 'popular':
                getPopular();
                break;
            case 'latest':
                getLatest();
                break;
            case 'topRated':
                getTopRated();
                break;
            default:
                break;
        }
    };

    return (
        <>
            <Head>
                <title>Movie Searcher - {t('title')}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Grid container className={styles.containerMovies}>
                <Grid md={2}>
                    <ul className={styles.menuList}>
                        <li onClick={() => router.push("/")} style={{fontSize: 22, marginLeft: '-22px', marginBottom: 15}}><HomeIcon /> Home</li>
                        {
                            recommendationsOptions.map((option) => {
                                return <li className={`${selectedRecommendation === option.value ? styles.activeOption : ''}`} onClick={() => handleClickOption(option.value)}>{option.label}</li>
                            })
                        }
                    </ul>
                </Grid>

                <Grid md={10}>
                    {movies.length> 0 ? (
                        <Grid container spacing={2} className={styles.moviesGrid}>
                            {movies.map((movie: any) => (
                                <Grid item xs={12} md={6} key={movie.id}>
                                    <MovieItem movie={movie} translationFile="recommendations"/>
                                </Grid>
                            ))}
                        </Grid>
                    ) : <></>}
                </Grid>
            </Grid>

        </>
    );
};

export default Recommendations;